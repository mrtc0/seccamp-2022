{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Seccamp 2022 B6 \ud83d\udea7 WIP Seccamp 2022 B6 \u306e\u4e8b\u524d\u5b66\u7fd2\u3068\u8b1b\u7fa9\u8cc7\u6599 \u74b0\u5883\u69cb\u7bc9 \u4e8b\u524d\u5b66\u7fd2 2.1. Docker 2.2. Kubernetes \u8b1b\u7fa9\u8cc7\u6599","title":"HOME"},{"location":"#seccamp-2022-b6","text":"\ud83d\udea7 WIP Seccamp 2022 B6 \u306e\u4e8b\u524d\u5b66\u7fd2\u3068\u8b1b\u7fa9\u8cc7\u6599 \u74b0\u5883\u69cb\u7bc9 \u4e8b\u524d\u5b66\u7fd2 2.1. Docker 2.2. Kubernetes \u8b1b\u7fa9\u8cc7\u6599","title":"Seccamp 2022 B6"},{"location":"pre/docker/challenge/","text":"\u4e8b\u524d\u8ab2\u984c 1. Docker \u30a4\u30e1\u30fc\u30b8\u3092 Push \u3059\u308b Docker \u30a4\u30e1\u30fc\u30b8\u3092 Build \u3057\u3066\u30ec\u30b8\u30b9\u30c8\u30ea(Docker Hub)\u306b Push \u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u307e\u305f\u3001Push \u3057\u305f\u30a4\u30e1\u30fc\u30b8\u3092 Pull \u3057\u3066\u30b3\u30f3\u30c6\u30ca\u3092\u5b9f\u884c\u3057\u3066\u304f\u3060\u3055\u3044\u3002 Build \u3059\u308b\u30a4\u30e1\u30fc\u30b8\u306f\u3069\u306e\u3088\u3046\u306a\u3082\u306e\u3067\u3082\u69cb\u3044\u307e\u305b\u3093\u3002\u305f\u3060\u3057\u3001Public \u3067\u516c\u958b\u3059\u308b\u5834\u5408\u306f\u6a5f\u5bc6\u60c5\u5831\u3092\u542b\u307e\u306a\u3044\u3088\u3046\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002 2. WordPress \u3092 docker-compose \u3067\u8d77\u52d5\u3059\u308b \u6b21\u306e\u3088\u3046\u306a\u69cb\u6210\u3067 WordPress \u3092 docker-compose \u3067\u8d77\u52d5\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b MySQL \u3092\u4f7f\u3046\u3053\u3068 WordPress \u3068 MySQL \u306e\u30c7\u30fc\u30bf\u306f\u6c38\u7d9a\u5316(\u30b3\u30f3\u30c6\u30ca\u3092\u518d\u8d77\u52d5\u3057\u3066\u3082\u30c7\u30fc\u30bf\u306f\u4fdd\u6301)\u3055\u308c\u308b\u3088\u3046\u306b volume \u3092\u4f5c\u6210\u3059\u308b\u3053\u3068 WordPress \u306f /var/www/html \u3092\u6c38\u7d9a\u5316 MySQL \u306f /var/lib/mysql \u3092\u6c38\u7d9a\u5316 WordPress \u3078\u306e\u30a2\u30af\u30bb\u30b9\u306b\u306f nginx \u306e\u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7\u3092\u901a\u3059\u3053\u3068","title":"Challenges"},{"location":"pre/docker/challenge/#_1","text":"","title":"\u4e8b\u524d\u8ab2\u984c"},{"location":"pre/docker/challenge/#1-docker-push","text":"Docker \u30a4\u30e1\u30fc\u30b8\u3092 Build \u3057\u3066\u30ec\u30b8\u30b9\u30c8\u30ea(Docker Hub)\u306b Push \u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u307e\u305f\u3001Push \u3057\u305f\u30a4\u30e1\u30fc\u30b8\u3092 Pull \u3057\u3066\u30b3\u30f3\u30c6\u30ca\u3092\u5b9f\u884c\u3057\u3066\u304f\u3060\u3055\u3044\u3002 Build \u3059\u308b\u30a4\u30e1\u30fc\u30b8\u306f\u3069\u306e\u3088\u3046\u306a\u3082\u306e\u3067\u3082\u69cb\u3044\u307e\u305b\u3093\u3002\u305f\u3060\u3057\u3001Public \u3067\u516c\u958b\u3059\u308b\u5834\u5408\u306f\u6a5f\u5bc6\u60c5\u5831\u3092\u542b\u307e\u306a\u3044\u3088\u3046\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"1. Docker \u30a4\u30e1\u30fc\u30b8\u3092 Push \u3059\u308b"},{"location":"pre/docker/challenge/#2-wordpress-docker-compose","text":"\u6b21\u306e\u3088\u3046\u306a\u69cb\u6210\u3067 WordPress \u3092 docker-compose \u3067\u8d77\u52d5\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b MySQL \u3092\u4f7f\u3046\u3053\u3068 WordPress \u3068 MySQL \u306e\u30c7\u30fc\u30bf\u306f\u6c38\u7d9a\u5316(\u30b3\u30f3\u30c6\u30ca\u3092\u518d\u8d77\u52d5\u3057\u3066\u3082\u30c7\u30fc\u30bf\u306f\u4fdd\u6301)\u3055\u308c\u308b\u3088\u3046\u306b volume \u3092\u4f5c\u6210\u3059\u308b\u3053\u3068 WordPress \u306f /var/www/html \u3092\u6c38\u7d9a\u5316 MySQL \u306f /var/lib/mysql \u3092\u6c38\u7d9a\u5316 WordPress \u3078\u306e\u30a2\u30af\u30bb\u30b9\u306b\u306f nginx \u306e\u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7\u3092\u901a\u3059\u3053\u3068","title":"2. WordPress \u3092 docker-compose \u3067\u8d77\u52d5\u3059\u308b"},{"location":"pre/docker/demo/","text":"Docker 101 \u3053\u3053\u3067\u306f\u3001Docker \u306e\u4f7f\u3044\u65b9\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3059\u3002\u7d30\u304b\u3044\u8aac\u660e\u306f\u7701\u7565\u3057\u3066\u3044\u307e\u3059\u306e\u3067\u3001\u9069\u5b9c\u30b3\u30de\u30f3\u30c9\u306e\u610f\u5473\u306a\u3069\u3092\u8abf\u3079\u306a\u304c\u3089\u9032\u3081\u3066\u304f\u3060\u3055\u3044\u3002 Docker Command 101 Docker \u30b3\u30f3\u30c6\u30ca\u3092\u8d77\u52d5\u3057\u3066\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b docker run \u30b3\u30de\u30f3\u30c9\u3067\u30b3\u30f3\u30c6\u30ca\u3092\u8d77\u52d5\u3057\u3066\u3001\u6307\u5b9a\u3057\u305f\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3067\u304d\u307e\u3059\u3002 $ sudo docker run --rm -it ubuntu:22.04 bash # \u30b3\u30f3\u30c6\u30ca\u306e\u4e2d\u3067\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b container:/# hostname # \u30b3\u30f3\u30c6\u30ca\u3092\u629c\u3051\u308b container:/# exit Docker \u30b3\u30f3\u30c6\u30ca\u306e\u8d77\u52d5 / \u30b3\u30de\u30f3\u30c9\u306e\u5b9f\u884c / \u505c\u6b62 docker run \u306b -d \u30d5\u30e9\u30b0\u3092\u4ed8\u4e0e\u3059\u308b\u3068\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\u3067\u52d5\u304d\u307e\u3059\u3002 47e2feb... \u306f Docker \u306b\u3088\u3063\u3066\u5272\u308a\u632f\u3089\u308c\u305f\u30e6\u30cb\u30fc\u30af\u306a\u30b3\u30f3\u30c6\u30ca\u306e ID \u3067\u3059\u3002 $ sudo docker run --name ubuntu -d ubuntu:22.04 sleep 120 47e2feb752c3a8f0684fa10647d4c48a02f0fd0855c54c7865c47d647e9e7876 \u73fe\u5728\u52d5\u3044\u3066\u3044\u308b\u30b3\u30f3\u30c6\u30ca\u306f docker ps \u3067\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002 # \u73fe\u5728\u52d5\u3044\u3066\u3044\u308b Docker \u30b3\u30f3\u30c6\u30ca $ sudo docker ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 47e2feb752c3 ubuntu:22.04 \"sleep 120\" 2 seconds ago Up 1 second ubuntu \u8d77\u52d5\u3057\u3066\u3044\u308b\u30b3\u30f3\u30c6\u30ca\u3067\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u306b\u306f docker exec \u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u3044\u307e\u3059\u3002 # ubuntu \u30b3\u30f3\u30c6\u30ca\u306e\u4e2d\u3067\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c $ sudo docker exec ubuntu ps auxf USER PID %CPU %MEM VSZ RSS TTY STAT START TIME COMMAND root 7 0 .0 0 .0 7060 1572 ? Rs 07 :25 0 :00 ps auxf root 1 0 .0 0 .0 2788 1008 ? Ss 07 :25 0 :00 sleep 120 \u30b3\u30f3\u30c6\u30ca\u3092\u505c\u6b62\u3059\u308b\u306b\u306f docker stop \u3092\u4f7f\u3044\u307e\u3059\u3002 # ubuntu \u30b3\u30f3\u30c6\u30ca\u3092\u505c\u6b62 $ sudo docker stop ubuntu ubuntu docker run \u30b3\u30de\u30f3\u30c9\u306b --rm \u30d5\u30e9\u30b0\u3092\u4ed8\u4e0e\u3057\u3066\u3044\u306a\u304b\u3063\u305f\u306e\u3067\u3001\u30b3\u30f3\u30c6\u30ca\u306f\u81ea\u52d5\u3067\u524a\u9664\u3055\u308c\u307e\u305b\u3093\u3002 # \u30b3\u30f3\u30c6\u30ca\u4e00\u89a7( `-a` \u30d5\u30e9\u30b0\u3067\u505c\u6b62\u3057\u305f\u30b3\u30f3\u30c6\u30ca\u3082\u542b\u3080) $ sudo docker ps -a CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 47e2feb752c3 ubuntu:22.04 \"sleep 120\" 39 seconds ago Exited ( 137 ) 7 seconds ago ubuntu \u30b3\u30f3\u30c6\u30ca\u3092\u524a\u9664\u3059\u308b\u306b\u306f docker rm \u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u3044\u307e\u3059\u3002 # \u30b3\u30f3\u30c6\u30ca\u3092\u524a\u9664\u3059\u308b $ sudo docker rm ubuntu ubuntu $ sudo docker ps -a CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES Web \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u30b3\u30f3\u30c6\u30ca\u3067\u52d5\u304b\u3059 \u7c21\u5358\u306a Web \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u30b3\u30f3\u30c6\u30ca\u3067\u52d5\u304b\u3057\u307e\u3059\u3002 \u6b21\u306e\u30b9\u30c6\u30c3\u30d7\u3067\u9032\u3081\u3066\u3044\u304d\u3001\u6700\u7d42\u7684\u306b\u56f3\u306e\u3088\u3046\u306a\u69cb\u6210\u306e\u30b3\u30f3\u30c6\u30ca\u3092\u4f5c\u308a\u307e\u3059\u3002 nginx \u3092\u30b3\u30f3\u30c6\u30ca\u3067\u52d5\u304b\u3059 nginx \u306e\u8a2d\u5b9a\u3092\u5909\u66f4\u3059\u308b Sinatra \u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u30b3\u30f3\u30c6\u30ca\u3067\u52d5\u304b\u3059 docker-compose \u3067 nginx \u3068 Sinatra \u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u52d5\u304b\u3059 nginx \u3092\u30b3\u30f3\u30c6\u30ca\u3067\u52d5\u304b\u3059 nginx \u30b3\u30f3\u30c6\u30ca\u3092\u8d77\u52d5\u3057\u307e\u3059\u3002 docker run \u306e -p \u30d5\u30e9\u30b0\u3067\u30dd\u30fc\u30c8\u30d5\u30a9\u30ef\u30fc\u30c7\u30a3\u30f3\u30b0\u3067\u304d\u307e\u3059\u3002 \u307e\u305f\u3001 docker logs \u3067\u30b3\u30f3\u30c6\u30ca\u306e\u30ed\u30b0(stdout, stderr)\u3092\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002 $ sudo docker run --name nginx --rm -it -d -p 12345 :80 nginx:latest d8e5834d90fd0e8ed0d6c3384379fdf07fb585e44a077b66dc8841f95a77b7aa $ sudo docker ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES d8e5834d90fd nginx:latest \"/docker-entrypoint.\u2026\" 2 seconds ago Up 2 seconds 0 .0.0.0:12345->80/tcp, :::12345->80/tcp nginx $ sudo docker logs nginx | tail -n 3 2022 /07/03 07 :31:15 [ notice ] 1 #1: start worker processes 2022 /07/03 07 :31:15 [ notice ] 1 #1: start worker process 31 2022 /07/03 07 :31:15 [ notice ] 1 #1: start worker process 32 curl \u3067 nginx \u30b3\u30f3\u30c6\u30ca\u306b\u63a5\u7d9a\u3057\u307e\u3059\u3002 $ curl localhost:12345 <!DOCTYPE html> <html> <head> <title>Welcome to nginx!</title> <style> html { color-scheme: light dark ; } body { width: 35em ; margin: 0 auto ; font-family: Tahoma, Verdana, Arial, sans-serif ; } </style> </head> <body> <h1>Welcome to nginx!</h1> <p>If you see this page, the nginx web server is successfully installed and working. Further configuration is required.</p> <p>For online documentation and support please refer to <a href = \"http://nginx.org/\" >nginx.org</a>.<br/> Commercial support is available at <a href = \"http://nginx.com/\" >nginx.com</a>.</p> <p><em>Thank you for using nginx.</em></p> </body> </html> docker logs \u3067\u63a5\u7d9a\u304c\u3042\u3063\u305f\u3053\u3068\u3092\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002 $ sudo docker logs nginx | tail -n 1 172 .17.0.1 - - [ 03 /Jul/2022:07:32:16 +0000 ] \"GET / HTTP/1.1\" 200 615 \"-\" \"curl/7.81.0\" \"-\" nginx \u30b3\u30f3\u30c6\u30ca\u3092\u505c\u6b62\u3057\u307e\u3059\u3002 $ sudo docker stop nginx index.html \u3092\u5909\u66f4\u3059\u308b /home/vagrant/src/webapp/html \u306b index.html \u304c\u3042\u308a\u307e\u3059\u3002\u3053\u308c\u3092\u30b3\u30f3\u30c6\u30ca\u306b\u30de\u30a6\u30f3\u30c8\u3057\u3066\u30c7\u30d5\u30a9\u30eb\u30c8\u306e index.html \u3092\u5909\u66f4\u3057\u307e\u3059\u3002 \u30db\u30b9\u30c8\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u30b3\u30f3\u30c6\u30ca\u306b\u30de\u30a6\u30f3\u30c8\u3059\u308b\u306b\u306f -v \u30d5\u30e9\u30b0\u3092\u4f7f\u3044\u307e\u3059\u3002 $ pwd /home/vagrant/src/webapp $ sudo docker run --name nginx --rm -d -p 12345 :80 -v $PWD /html:/usr/share/nginx/html nginx:latest 6747a4f486038ed685829ddd85cfa560a5c76df20245010899c71a52c3ec324a $ curl localhost:12345 <!DOCTYPE html> <html lang = \"en\" > <head> <meta charset = \"UTF-8\" > <title></title> </head> <body> Hello Docker! </body> </html> $ sudo docker stop nginx \u30aa\u30ea\u30b8\u30ca\u30eb\u306e nginx \u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u3092\u4f5c\u6210\u3059\u308b docker build \u3067\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u3053\u3053\u3067\u306f mynginx \u3068\u3044\u3046\u540d\u524d\u306e\u30b3\u30f3\u30c6\u30ca\u3092\u4f5c\u6210\u3057\u3001 latest \u30bf\u30b0\u3092\u3064\u3051\u3066\u3044\u307e\u3059\u3002 Info Dockerfile \u306e\u5185\u5bb9\u3092\u78ba\u8a8d\u3057\u307e\u3057\u3087\u3046\u3002 $ pwd /home/vagrant/src/webapp $ sudo docker build -t mynginx:latest . mynginx \u30a4\u30e1\u30fc\u30b8\u3092\u4f7f\u3063\u305f\u30b3\u30f3\u30c6\u30ca\u3092\u8d77\u52d5\u3057\u307e\u3059\u3002 $ sudo docker run --rm -d --name nginx -p 12345 :80 mynginx:latest $ curl localhost:12345 <!DOCTYPE html> <html lang = \"en\" > <head> <meta charset = \"UTF-8\" > <title></title> </head> <body> Hello Docker! </body> </html> $ curl -H 'Host: nginx.local' localhost:12345/example/ <html> <head><title>301 Moved Permanently</title></head> <body> <center><h1>301 Moved Permanently</h1></center> <hr><center>nginx/1.23.0</center> </body> </html> $ sudo docker rm nginx \u30a2\u30d7\u30ea\u30b3\u30f3\u30c6\u30ca\u3092\u4f5c\u308b Sinatra \u3067\u4f5c\u3089\u308c\u305f Web \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u30b3\u30f3\u30c6\u30ca\u306b\u3057\u307e\u3059\u3002 Info Dockerfile \u306e\u5185\u5bb9\u3092\u78ba\u8a8d\u3057\u307e\u3057\u3087\u3046\u3002 $ pwd /home/vagrant/src/webapp/app $ sudo docker build -t app:latest . \u30b3\u30f3\u30c6\u30ca\u3092\u8d77\u52d5\u3057\u3066\u3001\u63a5\u7d9a\u3067\u304d\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002 $ sudo docker run --name app -d -p 9292 :9292 app:latest 661dcf33529310fdd9fdeb4a6cc1a6b5b16c47c1e96598a51edc2d5636ae9a4c $ curl localhost:9292 Hello Sinatra $ sudo docker stop app app nginx \u3092\u7d4c\u7531\u3057\u3066 app \u306b\u63a5\u7d9a\u3059\u308b nginx \u3092\u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7\u3068\u3057\u3066\u3001app \u306b\u63a5\u7d9a\u3059\u308b\u3088\u3046\u306b\u69cb\u6210\u3057\u307e\u3059\u3002\u90fd\u5ea6\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u3092\u30d3\u30eb\u30c9\u3057\u3001\u8d77\u52d5\u3059\u308b\u306e\u306f\u624b\u9593\u306a\u306e\u3067 docker-compose \u3067\u69cb\u7bc9\u3057\u307e\u3059\u3002 Info docker-compose.yml \u306e\u5185\u5bb9\u3092\u78ba\u8a8d\u3057\u307e\u3057\u3087\u3046\u3002 $ pwd /home/vagrant/src/webapp $ docker compose up -d $ curl -H 'Host: app.local' http://localhost/ Hello Sinatra $ docker compose stop","title":"Docker 101"},{"location":"pre/docker/demo/#docker-101","text":"\u3053\u3053\u3067\u306f\u3001Docker \u306e\u4f7f\u3044\u65b9\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3059\u3002\u7d30\u304b\u3044\u8aac\u660e\u306f\u7701\u7565\u3057\u3066\u3044\u307e\u3059\u306e\u3067\u3001\u9069\u5b9c\u30b3\u30de\u30f3\u30c9\u306e\u610f\u5473\u306a\u3069\u3092\u8abf\u3079\u306a\u304c\u3089\u9032\u3081\u3066\u304f\u3060\u3055\u3044\u3002","title":"Docker 101"},{"location":"pre/docker/demo/#docker-command-101","text":"","title":"Docker Command 101"},{"location":"pre/docker/demo/#docker","text":"docker run \u30b3\u30de\u30f3\u30c9\u3067\u30b3\u30f3\u30c6\u30ca\u3092\u8d77\u52d5\u3057\u3066\u3001\u6307\u5b9a\u3057\u305f\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3067\u304d\u307e\u3059\u3002 $ sudo docker run --rm -it ubuntu:22.04 bash # \u30b3\u30f3\u30c6\u30ca\u306e\u4e2d\u3067\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b container:/# hostname # \u30b3\u30f3\u30c6\u30ca\u3092\u629c\u3051\u308b container:/# exit","title":"Docker \u30b3\u30f3\u30c6\u30ca\u3092\u8d77\u52d5\u3057\u3066\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b"},{"location":"pre/docker/demo/#docker_1","text":"docker run \u306b -d \u30d5\u30e9\u30b0\u3092\u4ed8\u4e0e\u3059\u308b\u3068\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\u3067\u52d5\u304d\u307e\u3059\u3002 47e2feb... \u306f Docker \u306b\u3088\u3063\u3066\u5272\u308a\u632f\u3089\u308c\u305f\u30e6\u30cb\u30fc\u30af\u306a\u30b3\u30f3\u30c6\u30ca\u306e ID \u3067\u3059\u3002 $ sudo docker run --name ubuntu -d ubuntu:22.04 sleep 120 47e2feb752c3a8f0684fa10647d4c48a02f0fd0855c54c7865c47d647e9e7876 \u73fe\u5728\u52d5\u3044\u3066\u3044\u308b\u30b3\u30f3\u30c6\u30ca\u306f docker ps \u3067\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002 # \u73fe\u5728\u52d5\u3044\u3066\u3044\u308b Docker \u30b3\u30f3\u30c6\u30ca $ sudo docker ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 47e2feb752c3 ubuntu:22.04 \"sleep 120\" 2 seconds ago Up 1 second ubuntu \u8d77\u52d5\u3057\u3066\u3044\u308b\u30b3\u30f3\u30c6\u30ca\u3067\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u306b\u306f docker exec \u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u3044\u307e\u3059\u3002 # ubuntu \u30b3\u30f3\u30c6\u30ca\u306e\u4e2d\u3067\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c $ sudo docker exec ubuntu ps auxf USER PID %CPU %MEM VSZ RSS TTY STAT START TIME COMMAND root 7 0 .0 0 .0 7060 1572 ? Rs 07 :25 0 :00 ps auxf root 1 0 .0 0 .0 2788 1008 ? Ss 07 :25 0 :00 sleep 120 \u30b3\u30f3\u30c6\u30ca\u3092\u505c\u6b62\u3059\u308b\u306b\u306f docker stop \u3092\u4f7f\u3044\u307e\u3059\u3002 # ubuntu \u30b3\u30f3\u30c6\u30ca\u3092\u505c\u6b62 $ sudo docker stop ubuntu ubuntu docker run \u30b3\u30de\u30f3\u30c9\u306b --rm \u30d5\u30e9\u30b0\u3092\u4ed8\u4e0e\u3057\u3066\u3044\u306a\u304b\u3063\u305f\u306e\u3067\u3001\u30b3\u30f3\u30c6\u30ca\u306f\u81ea\u52d5\u3067\u524a\u9664\u3055\u308c\u307e\u305b\u3093\u3002 # \u30b3\u30f3\u30c6\u30ca\u4e00\u89a7( `-a` \u30d5\u30e9\u30b0\u3067\u505c\u6b62\u3057\u305f\u30b3\u30f3\u30c6\u30ca\u3082\u542b\u3080) $ sudo docker ps -a CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 47e2feb752c3 ubuntu:22.04 \"sleep 120\" 39 seconds ago Exited ( 137 ) 7 seconds ago ubuntu \u30b3\u30f3\u30c6\u30ca\u3092\u524a\u9664\u3059\u308b\u306b\u306f docker rm \u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u3044\u307e\u3059\u3002 # \u30b3\u30f3\u30c6\u30ca\u3092\u524a\u9664\u3059\u308b $ sudo docker rm ubuntu ubuntu $ sudo docker ps -a CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES","title":"Docker \u30b3\u30f3\u30c6\u30ca\u306e\u8d77\u52d5 / \u30b3\u30de\u30f3\u30c9\u306e\u5b9f\u884c / \u505c\u6b62"},{"location":"pre/docker/demo/#web","text":"\u7c21\u5358\u306a Web \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u30b3\u30f3\u30c6\u30ca\u3067\u52d5\u304b\u3057\u307e\u3059\u3002 \u6b21\u306e\u30b9\u30c6\u30c3\u30d7\u3067\u9032\u3081\u3066\u3044\u304d\u3001\u6700\u7d42\u7684\u306b\u56f3\u306e\u3088\u3046\u306a\u69cb\u6210\u306e\u30b3\u30f3\u30c6\u30ca\u3092\u4f5c\u308a\u307e\u3059\u3002 nginx \u3092\u30b3\u30f3\u30c6\u30ca\u3067\u52d5\u304b\u3059 nginx \u306e\u8a2d\u5b9a\u3092\u5909\u66f4\u3059\u308b Sinatra \u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u30b3\u30f3\u30c6\u30ca\u3067\u52d5\u304b\u3059 docker-compose \u3067 nginx \u3068 Sinatra \u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u52d5\u304b\u3059","title":"Web \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u30b3\u30f3\u30c6\u30ca\u3067\u52d5\u304b\u3059"},{"location":"pre/docker/demo/#nginx","text":"nginx \u30b3\u30f3\u30c6\u30ca\u3092\u8d77\u52d5\u3057\u307e\u3059\u3002 docker run \u306e -p \u30d5\u30e9\u30b0\u3067\u30dd\u30fc\u30c8\u30d5\u30a9\u30ef\u30fc\u30c7\u30a3\u30f3\u30b0\u3067\u304d\u307e\u3059\u3002 \u307e\u305f\u3001 docker logs \u3067\u30b3\u30f3\u30c6\u30ca\u306e\u30ed\u30b0(stdout, stderr)\u3092\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002 $ sudo docker run --name nginx --rm -it -d -p 12345 :80 nginx:latest d8e5834d90fd0e8ed0d6c3384379fdf07fb585e44a077b66dc8841f95a77b7aa $ sudo docker ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES d8e5834d90fd nginx:latest \"/docker-entrypoint.\u2026\" 2 seconds ago Up 2 seconds 0 .0.0.0:12345->80/tcp, :::12345->80/tcp nginx $ sudo docker logs nginx | tail -n 3 2022 /07/03 07 :31:15 [ notice ] 1 #1: start worker processes 2022 /07/03 07 :31:15 [ notice ] 1 #1: start worker process 31 2022 /07/03 07 :31:15 [ notice ] 1 #1: start worker process 32 curl \u3067 nginx \u30b3\u30f3\u30c6\u30ca\u306b\u63a5\u7d9a\u3057\u307e\u3059\u3002 $ curl localhost:12345 <!DOCTYPE html> <html> <head> <title>Welcome to nginx!</title> <style> html { color-scheme: light dark ; } body { width: 35em ; margin: 0 auto ; font-family: Tahoma, Verdana, Arial, sans-serif ; } </style> </head> <body> <h1>Welcome to nginx!</h1> <p>If you see this page, the nginx web server is successfully installed and working. Further configuration is required.</p> <p>For online documentation and support please refer to <a href = \"http://nginx.org/\" >nginx.org</a>.<br/> Commercial support is available at <a href = \"http://nginx.com/\" >nginx.com</a>.</p> <p><em>Thank you for using nginx.</em></p> </body> </html> docker logs \u3067\u63a5\u7d9a\u304c\u3042\u3063\u305f\u3053\u3068\u3092\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002 $ sudo docker logs nginx | tail -n 1 172 .17.0.1 - - [ 03 /Jul/2022:07:32:16 +0000 ] \"GET / HTTP/1.1\" 200 615 \"-\" \"curl/7.81.0\" \"-\" nginx \u30b3\u30f3\u30c6\u30ca\u3092\u505c\u6b62\u3057\u307e\u3059\u3002 $ sudo docker stop nginx","title":"nginx \u3092\u30b3\u30f3\u30c6\u30ca\u3067\u52d5\u304b\u3059"},{"location":"pre/docker/demo/#indexhtml","text":"/home/vagrant/src/webapp/html \u306b index.html \u304c\u3042\u308a\u307e\u3059\u3002\u3053\u308c\u3092\u30b3\u30f3\u30c6\u30ca\u306b\u30de\u30a6\u30f3\u30c8\u3057\u3066\u30c7\u30d5\u30a9\u30eb\u30c8\u306e index.html \u3092\u5909\u66f4\u3057\u307e\u3059\u3002 \u30db\u30b9\u30c8\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u30b3\u30f3\u30c6\u30ca\u306b\u30de\u30a6\u30f3\u30c8\u3059\u308b\u306b\u306f -v \u30d5\u30e9\u30b0\u3092\u4f7f\u3044\u307e\u3059\u3002 $ pwd /home/vagrant/src/webapp $ sudo docker run --name nginx --rm -d -p 12345 :80 -v $PWD /html:/usr/share/nginx/html nginx:latest 6747a4f486038ed685829ddd85cfa560a5c76df20245010899c71a52c3ec324a $ curl localhost:12345 <!DOCTYPE html> <html lang = \"en\" > <head> <meta charset = \"UTF-8\" > <title></title> </head> <body> Hello Docker! </body> </html> $ sudo docker stop nginx","title":"index.html \u3092\u5909\u66f4\u3059\u308b"},{"location":"pre/docker/demo/#nginx_1","text":"docker build \u3067\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u3053\u3053\u3067\u306f mynginx \u3068\u3044\u3046\u540d\u524d\u306e\u30b3\u30f3\u30c6\u30ca\u3092\u4f5c\u6210\u3057\u3001 latest \u30bf\u30b0\u3092\u3064\u3051\u3066\u3044\u307e\u3059\u3002 Info Dockerfile \u306e\u5185\u5bb9\u3092\u78ba\u8a8d\u3057\u307e\u3057\u3087\u3046\u3002 $ pwd /home/vagrant/src/webapp $ sudo docker build -t mynginx:latest . mynginx \u30a4\u30e1\u30fc\u30b8\u3092\u4f7f\u3063\u305f\u30b3\u30f3\u30c6\u30ca\u3092\u8d77\u52d5\u3057\u307e\u3059\u3002 $ sudo docker run --rm -d --name nginx -p 12345 :80 mynginx:latest $ curl localhost:12345 <!DOCTYPE html> <html lang = \"en\" > <head> <meta charset = \"UTF-8\" > <title></title> </head> <body> Hello Docker! </body> </html> $ curl -H 'Host: nginx.local' localhost:12345/example/ <html> <head><title>301 Moved Permanently</title></head> <body> <center><h1>301 Moved Permanently</h1></center> <hr><center>nginx/1.23.0</center> </body> </html> $ sudo docker rm nginx","title":"\u30aa\u30ea\u30b8\u30ca\u30eb\u306e nginx \u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u3092\u4f5c\u6210\u3059\u308b"},{"location":"pre/docker/demo/#_1","text":"Sinatra \u3067\u4f5c\u3089\u308c\u305f Web \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u30b3\u30f3\u30c6\u30ca\u306b\u3057\u307e\u3059\u3002 Info Dockerfile \u306e\u5185\u5bb9\u3092\u78ba\u8a8d\u3057\u307e\u3057\u3087\u3046\u3002 $ pwd /home/vagrant/src/webapp/app $ sudo docker build -t app:latest . \u30b3\u30f3\u30c6\u30ca\u3092\u8d77\u52d5\u3057\u3066\u3001\u63a5\u7d9a\u3067\u304d\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002 $ sudo docker run --name app -d -p 9292 :9292 app:latest 661dcf33529310fdd9fdeb4a6cc1a6b5b16c47c1e96598a51edc2d5636ae9a4c $ curl localhost:9292 Hello Sinatra $ sudo docker stop app app","title":"\u30a2\u30d7\u30ea\u30b3\u30f3\u30c6\u30ca\u3092\u4f5c\u308b"},{"location":"pre/docker/demo/#nginx-app","text":"nginx \u3092\u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7\u3068\u3057\u3066\u3001app \u306b\u63a5\u7d9a\u3059\u308b\u3088\u3046\u306b\u69cb\u6210\u3057\u307e\u3059\u3002\u90fd\u5ea6\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u3092\u30d3\u30eb\u30c9\u3057\u3001\u8d77\u52d5\u3059\u308b\u306e\u306f\u624b\u9593\u306a\u306e\u3067 docker-compose \u3067\u69cb\u7bc9\u3057\u307e\u3059\u3002 Info docker-compose.yml \u306e\u5185\u5bb9\u3092\u78ba\u8a8d\u3057\u307e\u3057\u3087\u3046\u3002 $ pwd /home/vagrant/src/webapp $ docker compose up -d $ curl -H 'Host: app.local' http://localhost/ Hello Sinatra $ docker compose stop","title":"nginx \u3092\u7d4c\u7531\u3057\u3066 app \u306b\u63a5\u7d9a\u3059\u308b"},{"location":"pre/kubernetes/challenge/","text":"\u4e8b\u524d\u8ab2\u984c 1. \u81ea\u5206\u3067\u4f5c\u3063\u305f\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u3092 Pod \u3068\u3057\u3066\u8d77\u52d5\u3059\u308b \u300c Docker \u4e8b\u524d\u8ab2\u984c 1. Docker \u30a4\u30e1\u30fc\u30b8\u3092 Push \u3059\u308b \u300d\u3067\u4f5c\u3063\u305f\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u3092\u4f7f\u3063\u305f Pod \u3092\u8d77\u52d5\u3057\u3066\u304f\u3060\u3055\u3044\u3002Pod \u3067\u3082 Deployment \u3067\u3082\u69cb\u3044\u307e\u305b\u3093\u3002 2. WordPress \u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b \u6b21\u306e\u3088\u3046\u306a\u69cb\u6210\u3067 WordPress \u3092 Kubernetes \u4e0a\u306b\u30c7\u30d7\u30ed\u30a4\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b MySQL \u3092\u4f7f\u3046\u3053\u3068 \u30d1\u30b9\u30ef\u30fc\u30c9\u306f Secrets \u30ea\u30bd\u30fc\u30b9\u3067\u6271\u3046\u3053\u3068 /var/lib/mysql \u306f PVC \u3067\u6c38\u7d9a\u5316\u3059\u308b\u3053\u3068 WordPress \u306e\u30c7\u30fc\u30bf /var/www/html \u306f PVC \u3067\u6c38\u7d9a\u5316\u3059\u308b\u3053\u3068 WordPress \u306b Ingress \u7d4c\u7531\u3067\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3053\u3068","title":"Challenges"},{"location":"pre/kubernetes/challenge/#_1","text":"","title":"\u4e8b\u524d\u8ab2\u984c"},{"location":"pre/kubernetes/challenge/#1-pod","text":"\u300c Docker \u4e8b\u524d\u8ab2\u984c 1. Docker \u30a4\u30e1\u30fc\u30b8\u3092 Push \u3059\u308b \u300d\u3067\u4f5c\u3063\u305f\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u3092\u4f7f\u3063\u305f Pod \u3092\u8d77\u52d5\u3057\u3066\u304f\u3060\u3055\u3044\u3002Pod \u3067\u3082 Deployment \u3067\u3082\u69cb\u3044\u307e\u305b\u3093\u3002","title":"1. \u81ea\u5206\u3067\u4f5c\u3063\u305f\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u3092 Pod \u3068\u3057\u3066\u8d77\u52d5\u3059\u308b"},{"location":"pre/kubernetes/challenge/#2-wordpress","text":"\u6b21\u306e\u3088\u3046\u306a\u69cb\u6210\u3067 WordPress \u3092 Kubernetes \u4e0a\u306b\u30c7\u30d7\u30ed\u30a4\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b MySQL \u3092\u4f7f\u3046\u3053\u3068 \u30d1\u30b9\u30ef\u30fc\u30c9\u306f Secrets \u30ea\u30bd\u30fc\u30b9\u3067\u6271\u3046\u3053\u3068 /var/lib/mysql \u306f PVC \u3067\u6c38\u7d9a\u5316\u3059\u308b\u3053\u3068 WordPress \u306e\u30c7\u30fc\u30bf /var/www/html \u306f PVC \u3067\u6c38\u7d9a\u5316\u3059\u308b\u3053\u3068 WordPress \u306b Ingress \u7d4c\u7531\u3067\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3053\u3068","title":"2. WordPress \u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b"},{"location":"pre/kubernetes/demo/","text":"Kuberntes 101 \u3053\u3053\u3067\u306f Kubernetes \u306b\u304a\u3051\u308b\u4e3b\u8981\u306a\u30ea\u30bd\u30fc\u30b9\u306e\u4f5c\u6210\u65b9\u6cd5\u306b\u3064\u3044\u3066\u7d39\u4ecb\u3057\u307e\u3059\u3002 \u7d30\u304b\u3044\u8aac\u660e\u306f\u7701\u7565\u3057\u3066\u3044\u307e\u3059\u306e\u3067\u3001\u9069\u5b9c\u30ea\u30bd\u30fc\u30b9\u306b\u3064\u3044\u3066\u8abf\u3079\u306a\u304c\u3089\u9032\u3081\u3066\u304f\u3060\u3055\u3044\u3002 \u307e\u305f\u3001manifest \u306e\u5185\u5bb9\u3082\u9069\u5b9c\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 Namespace \u3092\u4f5c\u6210\u3059\u308b $ kubectl create namespace sandbox $ kubens sandbox $ kubectl get pods No resources found in sandbox namespace. Pod \u3092\u4f5c\u6210\u3059\u308b nginx \u306e Pod \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 Running \u306b\u306a\u308c\u3070\u52d5\u3044\u3066\u3044\u307e\u3059\u3002 $ kubectl apply -f pod.yaml $ kubectl get pods NAME READY STATUS RESTARTS AGE nginx 1 /1 Running 0 89s kubectl port-forward \u3067 Pod \u3078\u306e\u63a5\u7d9a\u3092\u78ba\u7acb\u3057\u3001curl \u3067 nginx Pod \u306b\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u4fe1\u3057\u307e\u3059\u3002 $ kubectl port-forward pod/nginx 12345 :80 Forwarding from 127 .0.0.1:12345 -> 80 Forwarding from [ ::1 ] :12345 -> 80 $ curl -I localhost:12345 HTTP/1.1 200 OK Server: nginx/1.23.0 kubectl logs \u3067\u30b3\u30f3\u30c6\u30ca\u306e\u30ed\u30b0\u3092\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002 $ kubectl logs nginx ... 2022/07/03 09:41:19 [notice] 1#1: start worker process 33 2022/07/03 09:41:19 [notice] 1#1: start worker process 34 127.0.0.1 - - [03/Jul/2022:09:44:06 +0000] \"HEAD / HTTP/1.1\" 200 0 \"-\" \"curl/7.81.0\" \"-\" Pod \u3092\u524a\u9664\u3057\u3066\u304a\u304d\u307e\u3059\u3002 $ kubectl delete -f pod.yaml Deployment \u3092\u4f5c\u6210\u3059\u308b nginx \u306e Deployment \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 replicas \u306b 2 \u3092\u8a2d\u5b9a\u3057\u3066\u3044\u308b\u306e\u3067 Pod \u306f2\u3064\u8d77\u52d5\u3057\u307e\u3059\u3002 $ kubectl apply -f deployment.yaml $ kubectl get deployment NAME READY UP-TO-DATE AVAILABLE AGE nginx 2 /2 2 2 7s $ kubectl get pods NAME READY STATUS RESTARTS AGE nginx-8d545c96d-kgmmv 1 /1 Running 0 10s nginx-8d545c96d-nhr6n 1 /1 Running 0 10s Pod \u30921\u3064\u9078\u3073\u3001\u524a\u9664\u3057\u307e\u3059\u3002 $ kubectl delete pod nginx-8d545c96d-kgmmv pod \"nginx-8d545c96d-kgmmv\" deleted Pod \u3092\u524a\u9664\u3057\u3066\u3082\u3001\u81ea\u52d5\u3067\u65b0\u3057\u3044 Pod \u304c\u8d77\u52d5\u3057\u307e\u3059\u3002 $ kubectl get pods NAME READY STATUS RESTARTS AGE nginx-8d545c96d-nhr6n 1 /1 Running 0 82s nginx-8d545c96d-s62c6 1 /1 Running 0 4s \ud83d\udc48 replicas \u30925\u306b\u5909\u66f4\u3059\u308b\u3068 Pod \u306f5\u3064\u8d77\u52d5\u3057\u307e\u3059\u3002 $ kubectl patch deployment nginx -p '{\"spec\":{\"replicas\":5}}' deployment.apps/nginx patched $ kubectl get pods NAME READY STATUS RESTARTS AGE nginx-8d545c96d-2929h 0 /1 ContainerCreating 0 3s nginx-8d545c96d-l8w6l 0 /1 ContainerCreating 0 3s nginx-8d545c96d-mzks5 0 /1 ContainerCreating 0 3s nginx-8d545c96d-nhr6n 1 /1 Running 0 4m1s nginx-8d545c96d-s62c6 1 /1 Running 0 2m43s Deployment \u3092\u524a\u9664\u3057\u3066\u304a\u304d\u307e\u3059\u3002 $ kubectl delete -f deployment.yml deployment.apps \"nginx\" deleted Service \u3092\u4f5c\u6210\u3059\u308b $ kubectl apply -f deployment.yml $ kubectl apply -f service.yaml $ kubectl get pods NAME READY STATUS RESTARTS AGE nginx-8d545c96d-fpn88 1 /1 Running 0 7s nginx-8d545c96d-jpnmj 1 /1 Running 0 7s $ kubectl get service NAME TYPE CLUSTER-IP EXTERNAL-IP PORT ( S ) AGE nginx ClusterIP 10 .101.128.111 <none> 80 /TCP 7s Service \u306f <service name>.<namespace name>.svc.cluster.local \u3067 Pod \u304b\u3089\u540d\u524d\u89e3\u6c7a\u3067\u304d\u307e\u3059\u3002 $ kubectl run --rm -it --image = ubuntu:22.04 bash If you don ' t see a command prompt, try pressing enter. root@bash:/# apt update && apt install -y curl root@bash:/# curl nginx.sandbox.svc.cluster.local <!DOCTYPE html> <html> ... Pod \u304b\u3089\u4f55\u5ea6\u304b curl \u3067\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u4fe1\u3057\u3001Service \u304b\u3089\u5404 Pod \u306b\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u632f\u308a\u5206\u3051\u3089\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002 $ stern nginx ... nginx-8d545c96d-fpn88 nginx 172 .17.0.1 - - [ 03 /Jul/2022:10:04:17 +0000 ] \"GET / HTTP/1.1\" 200 615 \"-\" \"curl/7.81.0\" \"-\" nginx-8d545c96d-jpnmj nginx 172 .17.0.1 - - [ 03 /Jul/2022:10:04:18 +0000 ] \"GET / HTTP/1.1\" 200 615 \"-\" \"curl/7.81.0\" \"-\" nginx-8d545c96d-fpn88 nginx 172 .17.0.1 - - [ 03 /Jul/2022:10:04:18 +0000 ] \"GET / HTTP/1.1\" 200 615 \"-\" \"curl/7.81.0\" \"-\" nginx-8d545c96d-fpn88 nginx 172 .17.0.1 - - [ 03 /Jul/2022:10:04:19 +0000 ] \"GET / HTTP/1.1\" 200 615 \"-\" \"curl/7.81.0\" \"-\" nginx-8d545c96d-jpnmj nginx 172 .17.0.1 - - [ 03 /Jul/2022:10:04:20 +0000 ] \"GET / HTTP/1.1\" 200 615 \"-\" \"curl/7.81.0\" \"-\" nginx-8d545c96d-fpn88 nginx 172 .17.0.1 - - [ 03 /Jul/2022:10:04:20 +0000 ] \"GET / HTTP/1.1\" 200 615 \"-\" \"curl/7.81.0\" \"-\" Service \u3068 Deployment \u3092\u524a\u9664\u3057\u3066\u304a\u304d\u307e\u3059\u3002 $ kubectl delete -f service.yaml $ kubectl delete -f deployment.yaml Ingress \u3092\u4f5c\u6210\u3059\u308b \u6700\u521d\u306b minikube \u306e NGINX Ingress \u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u3092\u6709\u52b9\u5316\u3057\u307e\u3059\u3002 $ minikube addons enable ingress Deployment, Service, Ingress \u3092\u305d\u308c\u305e\u308c\u4f5c\u6210\u3057\u307e\u3059\u3002 $ kubectl apply -f deployment.yaml $ kubectl apply -f service.yaml $ kubectl apply -f ingress.yaml \u3057\u3070\u3089\u304f\u3059\u308b\u3068 ingress \u306b IP \u30a2\u30c9\u30ec\u30b9\u304c\u5272\u308a\u5f53\u3066\u3089\u308c\u307e\u3059\u3002 $ kubectl get ingress NAME CLASS HOSTS ADDRESS PORTS AGE nginx nginx nginx.local 192 .168.59.100 80 27s Ingress \u7d4c\u7531\u3067 Pod \u306b\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u5c4a\u304f\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002 $ curl -H 'Host: nginx.local' http://192.168.59.100 <!DOCTYPE html> <html> <head> <title>Welcome to nginx!</title> ... \u30ea\u30bd\u30fc\u30b9\u3092\u524a\u9664\u3057\u3066\u304a\u304d\u307e\u3059\u3002 $ kubectl delete -f deployment.yaml $ kubectl delete -f service.yaml $ kubectl delete -f ingress.yaml \u30c7\u30fc\u30bf\u306e\u6c38\u7d9a\u5316\u3068 Secrets \u30ea\u30bd\u30fc\u30b9 \u3053\u3053\u3067\u306f MySQL \u30b3\u30f3\u30c6\u30ca\u3092\u8d77\u52d5\u3057\u307e\u3059\u3002MySQL \u30b3\u30f3\u30c6\u30ca\u3092\u8d77\u52d5\u3059\u308b\u306b\u3042\u305f\u308a\u3001\u4ee5\u4e0b\u306e\u3053\u3068\u3092\u8003\u616e\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 MySQL root \u30e6\u30fc\u30b6\u30fc\u306e\u30d1\u30b9\u30ef\u30fc\u30c9\u306e\u8a2d\u5b9a \u30c7\u30fc\u30bf\u306e\u6c38\u7d9a\u5316 \u307e\u305a\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u306e\u8a2d\u5b9a\u306b\u3064\u3044\u3066\u3067\u3059\u304c\u3001Kuberntes \u3067\u306f\u30af\u30ec\u30c7\u30f3\u30b7\u30e3\u30eb\u306a\u3069\u306e\u6a5f\u5bc6\u60c5\u5831\u3092 Secrets \u30ea\u30bd\u30fc\u30b9\u3067\u6271\u3046\u306e\u304c\u4e00\u822c\u7684\u3067\u3059\u3002 $ kubectl create secret generic mysql-pass --from-literal = pass = MySQLP@ssW0rd --dry-run -o yaml > secret.yaml $ cat secret.yaml apiVersion: v1 data: pass: TXlTUUxQQHNzVzByZA == kind: Secret metadata: creationTimestamp: null name: mysql-pass $ kubectl apply -f secret.yaml $ kubectl get secrets NAME TYPE DATA AGE default-token-cn86n kubernetes.io/service-account-token 3 53m mysql-pass Opaque 1 6m34s Secret \u306f Pod \u306b\u74b0\u5883\u5909\u6570\u3068\u3057\u3066\u8a2d\u5b9a\u3057\u305f\u308a\u3001\u30d5\u30a1\u30a4\u30eb\u3068\u3057\u3066\u30de\u30a6\u30f3\u30c8\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u4eca\u56de\u306f MYSQL_ROOT_PASSWORD \u74b0\u5883\u5909\u6570\u3068\u3057\u3066\u8a2d\u5b9a\u3057\u307e\u3059\u3002 mysql \u30a4\u30e1\u30fc\u30b8\u306f\u8d77\u52d5\u6642\u306b MYSQL_ROOT_PASSWORD \u74b0\u5883\u69cb\u7bc9\u3092 root \u30e6\u30fc\u30b6\u30fc\u306e\u30d1\u30b9\u30ef\u30fc\u30c9\u3068\u3057\u3066\u8a2d\u5b9a\u3057\u307e\u3059\u3002 $ cat deployment.yaml ... containers: - image: mysql:8 name: mysql env: - name: MYSQL_ROOT_PASSWORD valueFrom: secretKeyRef: name: mysql-pass key: pass \u7d9a\u3044\u3066\u30c7\u30fc\u30bf\u306e\u6c38\u7d9a\u5316\u306b\u3064\u3044\u3066\u3067\u3059\u304c\u3001Kuberntes \u30af\u30e9\u30b9\u30bf\u3067\u306f PV(Persistent Volume) \u3092\u4f7f\u3063\u3066\u30c7\u30fc\u30bf\u3092\u6c38\u7d9a\u5316\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 Pod \u304b\u3089 PV \u3092\u4f7f\u7528\u3059\u308b\u306b\u306f PVC(Persistent Volume Claim) \u3068\u547c\u3070\u308c\u308b\u300cPod \u304b\u3089 PV \u3092\u4f7f\u3046\u305f\u3081\u306e\u6761\u4ef6\u300d\u3092\u8a18\u3057\u305f\u30ea\u30bd\u30fc\u30b9\u3092\u5225\u9014\u4f5c\u6210\u3057\u307e\u3059\u3002 $ cat pvc.yaml apiVersion: v1 kind: PersistentVolumeClaim metadata: name: mysql-pvc spec: accessModes: - ReadWriteOnce resources: requests: storage: 1Gi $ kubectl apply -f pvc.yaml $ kubectl get pvc NAME STATUS VOLUME CAPACITY ACCESS MODES STORAGECLASS AGE mysql-pvc Bound pvc-c2311ff5-d7ab-404d-aeb3-4d4e373902f2 1Gi RWO standard 2s Pod \u306b PVC \u306e\u30c7\u30fc\u30bf\u3092\u30de\u30a6\u30f3\u30c8\u3059\u308b\u306b\u306f volumes \u3067\u4f5c\u6210\u3057\u305f PVC \u3092\u6307\u5b9a\u3057\u3001 volumeMounts \u306b\u30de\u30a6\u30f3\u30c8\u5148\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 $ cat deployment.yaml ... containers : - image : mysql:8 name : mysql ... volumeMounts : - name : mysql-volume mountPath : /var/lib/mysql volumes : - name : mysql-volume persistentVolumeClaim : claimName : mysql-pvc Secrets \u3068 PVC \u304c\u4f5c\u6210\u3067\u304d\u305f\u3089 Deployment \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 $ kubectl apply -f deployment.yaml $ kubectl get pods NAME READY STATUS RESTARTS AGE mysql-849d9779bb-2cs4b 1 /1 Running 0 30s \u30d1\u30b9\u30ef\u30fc\u30c9 MySQLP@ssW0rd \u3067\u30ed\u30b0\u30a4\u30f3\u3067\u304d\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002 $ kubectl exec -it mysql-849d9779bb-2cs4b -- mysql -u root -p Enter Password: Welcome to the MySQL monitor. Commands end with ; or \\g . Your MySQL connection id is 8 Server version: 8 .0.29 MySQL Community Server - GPL Copyright ( c ) 2000 , 2022 , Oracle and/or its affiliates. Oracle is a registered trademark of Oracle Corporation and/or its affiliates. Other names may be trademarks of their respective owners. Type 'help;' or '\\h' for help. Type '\\c' to clear the current input statement. \u30c6\u30b9\u30c8\u7528\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u4f5c\u6210\u3057\u3001Pod \u3092\u524a\u9664\u3057\u307e\u3059\u3002 mysql> create database test ; Query OK, 1 row affected ( 0 .01 sec ) mysql> exit Bye $ kubectl scale deployment mysql --replicas = 0 deployment.apps/mysql scaled $ kubectl get pods No resources found in sandbox namespace. $ kubectl scale deployment mysql --replicas = 1 deployment.apps/mysql scaled $ kubectl get pods NAME READY STATUS RESTARTS AGE mysql-849d9779bb-lfzw8 1 /1 Running 0 4s \u518d\u3073 MySQL \u306b\u63a5\u7d9a\u3057\u3001 test \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304c\u6c38\u7d9a\u5316\u3057\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002 $ kubectl exec -it mysql-849d9779bb-lfzw8 -- mysql -u root -p Enter password: Welcome to the MySQL monitor. Commands end with ; or \\g . Your MySQL connection id is 8 Server version: 8 .0.29 MySQL Community Server - GPL Copyright ( c ) 2000 , 2022 , Oracle and/or its affiliates. Oracle is a registered trademark of Oracle Corporation and/or its affiliates. Other names may be trademarks of their respective owners. Type 'help;' or '\\h' for help. Type '\\c' to clear the current input statement. mysql> show databases ; +--------------------+ | Database | +--------------------+ | information_schema | | mysql | | performance_schema | | sys | | test | +--------------------+ 5 rows in set ( 0 .00 sec ) \u30ea\u30bd\u30fc\u30b9\u3092\u524a\u9664\u3057\u3066\u304a\u304d\u307e\u3059\u3002 $ kubectl delete -Rf . deployment.apps \"mysql\" deleted persistentvolumeclaim \"mysql-pvc\" deleted secret \"mysql-pass\" deleted \u305d\u306e\u4ed6\u306e\u30ea\u30bd\u30fc\u30b9 DaemonSet Kubernetes \u306f\u8907\u6570\u306e\u30ce\u30fc\u30c9\u304b\u3089\u69cb\u6210\u3055\u308c\u308b\u30af\u30e9\u30b9\u30bf\u3068\u3057\u3066\u52d5\u4f5c\u3059\u308b\u3053\u3068\u304c\u671f\u5f85\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u4eca\u56de\u306f\u30b7\u30f3\u30b0\u30eb\u30ce\u30fc\u30c9\u3067\u306e\u69cb\u6210\u3067\u3059\u304c\u3001\u901a\u5e38\u306f3\u30ce\u30fc\u30c9\u4ee5\u4e0a\u304b\u3089\u69cb\u6210\u3055\u308c\u308b\u3053\u3068\u304c\u307b\u3068\u3093\u3069\u3067\u3059\u3002 DaemonSet \u306f Pod \u3092\u3059\u3079\u3066\u306e\u30ce\u30fc\u30c9\u306b\u914d\u7f6e\u3059\u308b\u305f\u3081\u306e\u30ea\u30bd\u30fc\u30b9\u3067\u3059\u3002\u3053\u308c\u306f\u30ce\u30fc\u30c9\u3092\u76e3\u8996\u3059\u308b\u3088\u3046\u306a\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3092\u52d5\u304b\u3059\u969b\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002 ConfigMap \u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306a\u3069\u3092 Pod \u306b\u30de\u30a6\u30f3\u30c8\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3055\u308c\u308b\u30ea\u30bd\u30fc\u30b9\u3067\u3059\u3002\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u3092\u30d3\u30eb\u30c9\u3057\u305f\u308a\u3057\u306a\u304f\u3066\u3082 ConfigMap \u3092\u66f4\u65b0\u3059\u308b\u3060\u3051\u3067\u3001\u65b0\u3057\u304f\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3092\u69cb\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002","title":"Kubernetes 101"},{"location":"pre/kubernetes/demo/#kuberntes-101","text":"\u3053\u3053\u3067\u306f Kubernetes \u306b\u304a\u3051\u308b\u4e3b\u8981\u306a\u30ea\u30bd\u30fc\u30b9\u306e\u4f5c\u6210\u65b9\u6cd5\u306b\u3064\u3044\u3066\u7d39\u4ecb\u3057\u307e\u3059\u3002 \u7d30\u304b\u3044\u8aac\u660e\u306f\u7701\u7565\u3057\u3066\u3044\u307e\u3059\u306e\u3067\u3001\u9069\u5b9c\u30ea\u30bd\u30fc\u30b9\u306b\u3064\u3044\u3066\u8abf\u3079\u306a\u304c\u3089\u9032\u3081\u3066\u304f\u3060\u3055\u3044\u3002 \u307e\u305f\u3001manifest \u306e\u5185\u5bb9\u3082\u9069\u5b9c\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"Kuberntes 101"},{"location":"pre/kubernetes/demo/#namespace","text":"$ kubectl create namespace sandbox $ kubens sandbox $ kubectl get pods No resources found in sandbox namespace.","title":"Namespace \u3092\u4f5c\u6210\u3059\u308b"},{"location":"pre/kubernetes/demo/#pod","text":"nginx \u306e Pod \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 Running \u306b\u306a\u308c\u3070\u52d5\u3044\u3066\u3044\u307e\u3059\u3002 $ kubectl apply -f pod.yaml $ kubectl get pods NAME READY STATUS RESTARTS AGE nginx 1 /1 Running 0 89s kubectl port-forward \u3067 Pod \u3078\u306e\u63a5\u7d9a\u3092\u78ba\u7acb\u3057\u3001curl \u3067 nginx Pod \u306b\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u4fe1\u3057\u307e\u3059\u3002 $ kubectl port-forward pod/nginx 12345 :80 Forwarding from 127 .0.0.1:12345 -> 80 Forwarding from [ ::1 ] :12345 -> 80 $ curl -I localhost:12345 HTTP/1.1 200 OK Server: nginx/1.23.0 kubectl logs \u3067\u30b3\u30f3\u30c6\u30ca\u306e\u30ed\u30b0\u3092\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002 $ kubectl logs nginx ... 2022/07/03 09:41:19 [notice] 1#1: start worker process 33 2022/07/03 09:41:19 [notice] 1#1: start worker process 34 127.0.0.1 - - [03/Jul/2022:09:44:06 +0000] \"HEAD / HTTP/1.1\" 200 0 \"-\" \"curl/7.81.0\" \"-\" Pod \u3092\u524a\u9664\u3057\u3066\u304a\u304d\u307e\u3059\u3002 $ kubectl delete -f pod.yaml","title":"Pod \u3092\u4f5c\u6210\u3059\u308b"},{"location":"pre/kubernetes/demo/#deployment","text":"nginx \u306e Deployment \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 replicas \u306b 2 \u3092\u8a2d\u5b9a\u3057\u3066\u3044\u308b\u306e\u3067 Pod \u306f2\u3064\u8d77\u52d5\u3057\u307e\u3059\u3002 $ kubectl apply -f deployment.yaml $ kubectl get deployment NAME READY UP-TO-DATE AVAILABLE AGE nginx 2 /2 2 2 7s $ kubectl get pods NAME READY STATUS RESTARTS AGE nginx-8d545c96d-kgmmv 1 /1 Running 0 10s nginx-8d545c96d-nhr6n 1 /1 Running 0 10s Pod \u30921\u3064\u9078\u3073\u3001\u524a\u9664\u3057\u307e\u3059\u3002 $ kubectl delete pod nginx-8d545c96d-kgmmv pod \"nginx-8d545c96d-kgmmv\" deleted Pod \u3092\u524a\u9664\u3057\u3066\u3082\u3001\u81ea\u52d5\u3067\u65b0\u3057\u3044 Pod \u304c\u8d77\u52d5\u3057\u307e\u3059\u3002 $ kubectl get pods NAME READY STATUS RESTARTS AGE nginx-8d545c96d-nhr6n 1 /1 Running 0 82s nginx-8d545c96d-s62c6 1 /1 Running 0 4s \ud83d\udc48 replicas \u30925\u306b\u5909\u66f4\u3059\u308b\u3068 Pod \u306f5\u3064\u8d77\u52d5\u3057\u307e\u3059\u3002 $ kubectl patch deployment nginx -p '{\"spec\":{\"replicas\":5}}' deployment.apps/nginx patched $ kubectl get pods NAME READY STATUS RESTARTS AGE nginx-8d545c96d-2929h 0 /1 ContainerCreating 0 3s nginx-8d545c96d-l8w6l 0 /1 ContainerCreating 0 3s nginx-8d545c96d-mzks5 0 /1 ContainerCreating 0 3s nginx-8d545c96d-nhr6n 1 /1 Running 0 4m1s nginx-8d545c96d-s62c6 1 /1 Running 0 2m43s Deployment \u3092\u524a\u9664\u3057\u3066\u304a\u304d\u307e\u3059\u3002 $ kubectl delete -f deployment.yml deployment.apps \"nginx\" deleted","title":"Deployment \u3092\u4f5c\u6210\u3059\u308b"},{"location":"pre/kubernetes/demo/#service","text":"$ kubectl apply -f deployment.yml $ kubectl apply -f service.yaml $ kubectl get pods NAME READY STATUS RESTARTS AGE nginx-8d545c96d-fpn88 1 /1 Running 0 7s nginx-8d545c96d-jpnmj 1 /1 Running 0 7s $ kubectl get service NAME TYPE CLUSTER-IP EXTERNAL-IP PORT ( S ) AGE nginx ClusterIP 10 .101.128.111 <none> 80 /TCP 7s Service \u306f <service name>.<namespace name>.svc.cluster.local \u3067 Pod \u304b\u3089\u540d\u524d\u89e3\u6c7a\u3067\u304d\u307e\u3059\u3002 $ kubectl run --rm -it --image = ubuntu:22.04 bash If you don ' t see a command prompt, try pressing enter. root@bash:/# apt update && apt install -y curl root@bash:/# curl nginx.sandbox.svc.cluster.local <!DOCTYPE html> <html> ... Pod \u304b\u3089\u4f55\u5ea6\u304b curl \u3067\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u4fe1\u3057\u3001Service \u304b\u3089\u5404 Pod \u306b\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u632f\u308a\u5206\u3051\u3089\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002 $ stern nginx ... nginx-8d545c96d-fpn88 nginx 172 .17.0.1 - - [ 03 /Jul/2022:10:04:17 +0000 ] \"GET / HTTP/1.1\" 200 615 \"-\" \"curl/7.81.0\" \"-\" nginx-8d545c96d-jpnmj nginx 172 .17.0.1 - - [ 03 /Jul/2022:10:04:18 +0000 ] \"GET / HTTP/1.1\" 200 615 \"-\" \"curl/7.81.0\" \"-\" nginx-8d545c96d-fpn88 nginx 172 .17.0.1 - - [ 03 /Jul/2022:10:04:18 +0000 ] \"GET / HTTP/1.1\" 200 615 \"-\" \"curl/7.81.0\" \"-\" nginx-8d545c96d-fpn88 nginx 172 .17.0.1 - - [ 03 /Jul/2022:10:04:19 +0000 ] \"GET / HTTP/1.1\" 200 615 \"-\" \"curl/7.81.0\" \"-\" nginx-8d545c96d-jpnmj nginx 172 .17.0.1 - - [ 03 /Jul/2022:10:04:20 +0000 ] \"GET / HTTP/1.1\" 200 615 \"-\" \"curl/7.81.0\" \"-\" nginx-8d545c96d-fpn88 nginx 172 .17.0.1 - - [ 03 /Jul/2022:10:04:20 +0000 ] \"GET / HTTP/1.1\" 200 615 \"-\" \"curl/7.81.0\" \"-\" Service \u3068 Deployment \u3092\u524a\u9664\u3057\u3066\u304a\u304d\u307e\u3059\u3002 $ kubectl delete -f service.yaml $ kubectl delete -f deployment.yaml","title":"Service \u3092\u4f5c\u6210\u3059\u308b"},{"location":"pre/kubernetes/demo/#ingress","text":"\u6700\u521d\u306b minikube \u306e NGINX Ingress \u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u3092\u6709\u52b9\u5316\u3057\u307e\u3059\u3002 $ minikube addons enable ingress Deployment, Service, Ingress \u3092\u305d\u308c\u305e\u308c\u4f5c\u6210\u3057\u307e\u3059\u3002 $ kubectl apply -f deployment.yaml $ kubectl apply -f service.yaml $ kubectl apply -f ingress.yaml \u3057\u3070\u3089\u304f\u3059\u308b\u3068 ingress \u306b IP \u30a2\u30c9\u30ec\u30b9\u304c\u5272\u308a\u5f53\u3066\u3089\u308c\u307e\u3059\u3002 $ kubectl get ingress NAME CLASS HOSTS ADDRESS PORTS AGE nginx nginx nginx.local 192 .168.59.100 80 27s Ingress \u7d4c\u7531\u3067 Pod \u306b\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u5c4a\u304f\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002 $ curl -H 'Host: nginx.local' http://192.168.59.100 <!DOCTYPE html> <html> <head> <title>Welcome to nginx!</title> ... \u30ea\u30bd\u30fc\u30b9\u3092\u524a\u9664\u3057\u3066\u304a\u304d\u307e\u3059\u3002 $ kubectl delete -f deployment.yaml $ kubectl delete -f service.yaml $ kubectl delete -f ingress.yaml","title":"Ingress \u3092\u4f5c\u6210\u3059\u308b"},{"location":"pre/kubernetes/demo/#secrets","text":"\u3053\u3053\u3067\u306f MySQL \u30b3\u30f3\u30c6\u30ca\u3092\u8d77\u52d5\u3057\u307e\u3059\u3002MySQL \u30b3\u30f3\u30c6\u30ca\u3092\u8d77\u52d5\u3059\u308b\u306b\u3042\u305f\u308a\u3001\u4ee5\u4e0b\u306e\u3053\u3068\u3092\u8003\u616e\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 MySQL root \u30e6\u30fc\u30b6\u30fc\u306e\u30d1\u30b9\u30ef\u30fc\u30c9\u306e\u8a2d\u5b9a \u30c7\u30fc\u30bf\u306e\u6c38\u7d9a\u5316 \u307e\u305a\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u306e\u8a2d\u5b9a\u306b\u3064\u3044\u3066\u3067\u3059\u304c\u3001Kuberntes \u3067\u306f\u30af\u30ec\u30c7\u30f3\u30b7\u30e3\u30eb\u306a\u3069\u306e\u6a5f\u5bc6\u60c5\u5831\u3092 Secrets \u30ea\u30bd\u30fc\u30b9\u3067\u6271\u3046\u306e\u304c\u4e00\u822c\u7684\u3067\u3059\u3002 $ kubectl create secret generic mysql-pass --from-literal = pass = MySQLP@ssW0rd --dry-run -o yaml > secret.yaml $ cat secret.yaml apiVersion: v1 data: pass: TXlTUUxQQHNzVzByZA == kind: Secret metadata: creationTimestamp: null name: mysql-pass $ kubectl apply -f secret.yaml $ kubectl get secrets NAME TYPE DATA AGE default-token-cn86n kubernetes.io/service-account-token 3 53m mysql-pass Opaque 1 6m34s Secret \u306f Pod \u306b\u74b0\u5883\u5909\u6570\u3068\u3057\u3066\u8a2d\u5b9a\u3057\u305f\u308a\u3001\u30d5\u30a1\u30a4\u30eb\u3068\u3057\u3066\u30de\u30a6\u30f3\u30c8\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u4eca\u56de\u306f MYSQL_ROOT_PASSWORD \u74b0\u5883\u5909\u6570\u3068\u3057\u3066\u8a2d\u5b9a\u3057\u307e\u3059\u3002 mysql \u30a4\u30e1\u30fc\u30b8\u306f\u8d77\u52d5\u6642\u306b MYSQL_ROOT_PASSWORD \u74b0\u5883\u69cb\u7bc9\u3092 root \u30e6\u30fc\u30b6\u30fc\u306e\u30d1\u30b9\u30ef\u30fc\u30c9\u3068\u3057\u3066\u8a2d\u5b9a\u3057\u307e\u3059\u3002 $ cat deployment.yaml ... containers: - image: mysql:8 name: mysql env: - name: MYSQL_ROOT_PASSWORD valueFrom: secretKeyRef: name: mysql-pass key: pass \u7d9a\u3044\u3066\u30c7\u30fc\u30bf\u306e\u6c38\u7d9a\u5316\u306b\u3064\u3044\u3066\u3067\u3059\u304c\u3001Kuberntes \u30af\u30e9\u30b9\u30bf\u3067\u306f PV(Persistent Volume) \u3092\u4f7f\u3063\u3066\u30c7\u30fc\u30bf\u3092\u6c38\u7d9a\u5316\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 Pod \u304b\u3089 PV \u3092\u4f7f\u7528\u3059\u308b\u306b\u306f PVC(Persistent Volume Claim) \u3068\u547c\u3070\u308c\u308b\u300cPod \u304b\u3089 PV \u3092\u4f7f\u3046\u305f\u3081\u306e\u6761\u4ef6\u300d\u3092\u8a18\u3057\u305f\u30ea\u30bd\u30fc\u30b9\u3092\u5225\u9014\u4f5c\u6210\u3057\u307e\u3059\u3002 $ cat pvc.yaml apiVersion: v1 kind: PersistentVolumeClaim metadata: name: mysql-pvc spec: accessModes: - ReadWriteOnce resources: requests: storage: 1Gi $ kubectl apply -f pvc.yaml $ kubectl get pvc NAME STATUS VOLUME CAPACITY ACCESS MODES STORAGECLASS AGE mysql-pvc Bound pvc-c2311ff5-d7ab-404d-aeb3-4d4e373902f2 1Gi RWO standard 2s Pod \u306b PVC \u306e\u30c7\u30fc\u30bf\u3092\u30de\u30a6\u30f3\u30c8\u3059\u308b\u306b\u306f volumes \u3067\u4f5c\u6210\u3057\u305f PVC \u3092\u6307\u5b9a\u3057\u3001 volumeMounts \u306b\u30de\u30a6\u30f3\u30c8\u5148\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 $ cat deployment.yaml ... containers : - image : mysql:8 name : mysql ... volumeMounts : - name : mysql-volume mountPath : /var/lib/mysql volumes : - name : mysql-volume persistentVolumeClaim : claimName : mysql-pvc Secrets \u3068 PVC \u304c\u4f5c\u6210\u3067\u304d\u305f\u3089 Deployment \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 $ kubectl apply -f deployment.yaml $ kubectl get pods NAME READY STATUS RESTARTS AGE mysql-849d9779bb-2cs4b 1 /1 Running 0 30s \u30d1\u30b9\u30ef\u30fc\u30c9 MySQLP@ssW0rd \u3067\u30ed\u30b0\u30a4\u30f3\u3067\u304d\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002 $ kubectl exec -it mysql-849d9779bb-2cs4b -- mysql -u root -p Enter Password: Welcome to the MySQL monitor. Commands end with ; or \\g . Your MySQL connection id is 8 Server version: 8 .0.29 MySQL Community Server - GPL Copyright ( c ) 2000 , 2022 , Oracle and/or its affiliates. Oracle is a registered trademark of Oracle Corporation and/or its affiliates. Other names may be trademarks of their respective owners. Type 'help;' or '\\h' for help. Type '\\c' to clear the current input statement. \u30c6\u30b9\u30c8\u7528\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u4f5c\u6210\u3057\u3001Pod \u3092\u524a\u9664\u3057\u307e\u3059\u3002 mysql> create database test ; Query OK, 1 row affected ( 0 .01 sec ) mysql> exit Bye $ kubectl scale deployment mysql --replicas = 0 deployment.apps/mysql scaled $ kubectl get pods No resources found in sandbox namespace. $ kubectl scale deployment mysql --replicas = 1 deployment.apps/mysql scaled $ kubectl get pods NAME READY STATUS RESTARTS AGE mysql-849d9779bb-lfzw8 1 /1 Running 0 4s \u518d\u3073 MySQL \u306b\u63a5\u7d9a\u3057\u3001 test \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304c\u6c38\u7d9a\u5316\u3057\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002 $ kubectl exec -it mysql-849d9779bb-lfzw8 -- mysql -u root -p Enter password: Welcome to the MySQL monitor. Commands end with ; or \\g . Your MySQL connection id is 8 Server version: 8 .0.29 MySQL Community Server - GPL Copyright ( c ) 2000 , 2022 , Oracle and/or its affiliates. Oracle is a registered trademark of Oracle Corporation and/or its affiliates. Other names may be trademarks of their respective owners. Type 'help;' or '\\h' for help. Type '\\c' to clear the current input statement. mysql> show databases ; +--------------------+ | Database | +--------------------+ | information_schema | | mysql | | performance_schema | | sys | | test | +--------------------+ 5 rows in set ( 0 .00 sec ) \u30ea\u30bd\u30fc\u30b9\u3092\u524a\u9664\u3057\u3066\u304a\u304d\u307e\u3059\u3002 $ kubectl delete -Rf . deployment.apps \"mysql\" deleted persistentvolumeclaim \"mysql-pvc\" deleted secret \"mysql-pass\" deleted","title":"\u30c7\u30fc\u30bf\u306e\u6c38\u7d9a\u5316\u3068 Secrets \u30ea\u30bd\u30fc\u30b9"},{"location":"pre/kubernetes/demo/#_1","text":"","title":"\u305d\u306e\u4ed6\u306e\u30ea\u30bd\u30fc\u30b9"},{"location":"pre/kubernetes/demo/#daemonset","text":"Kubernetes \u306f\u8907\u6570\u306e\u30ce\u30fc\u30c9\u304b\u3089\u69cb\u6210\u3055\u308c\u308b\u30af\u30e9\u30b9\u30bf\u3068\u3057\u3066\u52d5\u4f5c\u3059\u308b\u3053\u3068\u304c\u671f\u5f85\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u4eca\u56de\u306f\u30b7\u30f3\u30b0\u30eb\u30ce\u30fc\u30c9\u3067\u306e\u69cb\u6210\u3067\u3059\u304c\u3001\u901a\u5e38\u306f3\u30ce\u30fc\u30c9\u4ee5\u4e0a\u304b\u3089\u69cb\u6210\u3055\u308c\u308b\u3053\u3068\u304c\u307b\u3068\u3093\u3069\u3067\u3059\u3002 DaemonSet \u306f Pod \u3092\u3059\u3079\u3066\u306e\u30ce\u30fc\u30c9\u306b\u914d\u7f6e\u3059\u308b\u305f\u3081\u306e\u30ea\u30bd\u30fc\u30b9\u3067\u3059\u3002\u3053\u308c\u306f\u30ce\u30fc\u30c9\u3092\u76e3\u8996\u3059\u308b\u3088\u3046\u306a\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3092\u52d5\u304b\u3059\u969b\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002","title":"DaemonSet"},{"location":"pre/kubernetes/demo/#configmap","text":"\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306a\u3069\u3092 Pod \u306b\u30de\u30a6\u30f3\u30c8\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3055\u308c\u308b\u30ea\u30bd\u30fc\u30b9\u3067\u3059\u3002\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u3092\u30d3\u30eb\u30c9\u3057\u305f\u308a\u3057\u306a\u304f\u3066\u3082 ConfigMap \u3092\u66f4\u65b0\u3059\u308b\u3060\u3051\u3067\u3001\u65b0\u3057\u304f\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3092\u69cb\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002","title":"ConfigMap"},{"location":"pre/setup/docker/","text":"Docker \u306e\u74b0\u5883\u69cb\u7bc9 VirtualBox \u3084 VMWare \u306a\u3069\u306e\u4eee\u60f3\u5316\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3092\u4f7f\u3063\u3066 Ubuntu 22.04 \u3092\u30b2\u30b9\u30c8OS \u3068\u3057\u305f\u4eee\u60f3\u74b0\u5883\u3092\u4f5c\u3063\u3066\u304f\u3060\u3055\u3044\u3002 Ubuntu 22.04 \u3092\u30b2\u30b9\u30c8 OS \u3068\u3057\u3066\u3001 Docker \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u304d\u3066\u3044\u308c\u3070 \u624b\u6bb5\u306f\u554f\u3044\u307e\u305b\u3093\u3002 Vagrant + VirtualBox \u3092\u4f7f\u3063\u305f\u65b9\u6cd5 1. VirtualBox \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b VirtualBox \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30e9\u30fc\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057 \u3001\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304f\u3060\u3055\u3044\u3002 2. Vagrant \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b Vagrant \u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9 \u3057\u3001\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304f\u3060\u3055\u3044\u3002 3. VM \u3092\u8d77\u52d5\u3059\u308b \u30ea\u30dd\u30b8\u30c8\u30ea\u3092 clone \u3057\u3066 src/pre/docker \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u79fb\u52d5\u3057\u3001 vagrant up \u3092\u5b9f\u884c\u3057\u307e\u3059\u3002 $ git clone git@github.com:mrtc0/seccamp-2022.git $ cd seccamp-2022/src/pre/docker $ vagrant up 4. VM \u306b\u30ed\u30b0\u30a4\u30f3\u3059\u308b vagrant ssh \u3092\u5b9f\u884c\u3057\u3066 VM \u306e\u4e2d\u306b\u30ed\u30b0\u30a4\u30f3\u3067\u304d\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 $ vagrant ssh 5. Serverspec \u3092\u5b9f\u884c\u3059\u308b(optional) \u6b63\u3057\u304f\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3055\u308c\u3066\u3044\u308b\u304b\u3069\u3046\u304b Serverspec \u3067\u30c6\u30b9\u30c8\u3067\u304d\u307e\u3059\u3002 $ gem i serverspec $ rake spec 6. VM \u306e\u30b7\u30e3\u30c3\u30c8\u30c0\u30a6\u30f3 $ vagrant halt (M1 Mac \u5411\u3051)Lima \u3092\u4f7f\u3063\u305f\u65b9\u6cd5 M1 Mac \u3092\u4f7f\u3063\u3066\u3044\u308b\u5834\u5408\u306f Lima \u3067\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3057\u307e\u3059\u3002 1. Lima \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb $ brew install lima 2. \u30ea\u30dd\u30b8\u30c8\u30ea\u306e clone $ git clone git@github.com:mrtc0/seccamp-2022.git $ cd seccamp-2022 3. VM \u306e\u4f5c\u6210\u3068\u8d77\u52d5 \u3053\u3053\u3067\u306f docker-x86_64 \u3068\u3044\u3046\u540d\u524d\u3092\u3064\u3051\u3066\u3044\u307e\u3059\u304c\u3001\u306a\u3093\u3067\u3082\u69cb\u3044\u307e\u305b\u3093\u3002 $ limactl start --name docker-x86_64 src/pre/docker/default.yaml ? Creating an instance \"docker-x86_64\" [ Use arrows to move, type to filter ] > Proceed with the current configuration # \u3053\u308c\u3092\u9078\u3076 Open an editor to review or modify the current configuration Choose another example ( docker, podman, archlinux, fedora, ... ) Exit ... 4. VM \u306b\u30ed\u30b0\u30a4\u30f3 $ limactl shell docker-x86_64 bash 5. VM \u306e\u30b7\u30e3\u30c3\u30c8\u30c0\u30a6\u30f3 $ limactl stop docker-x86_64","title":"Docker"},{"location":"pre/setup/docker/#docker","text":"VirtualBox \u3084 VMWare \u306a\u3069\u306e\u4eee\u60f3\u5316\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3092\u4f7f\u3063\u3066 Ubuntu 22.04 \u3092\u30b2\u30b9\u30c8OS \u3068\u3057\u305f\u4eee\u60f3\u74b0\u5883\u3092\u4f5c\u3063\u3066\u304f\u3060\u3055\u3044\u3002 Ubuntu 22.04 \u3092\u30b2\u30b9\u30c8 OS \u3068\u3057\u3066\u3001 Docker \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u304d\u3066\u3044\u308c\u3070 \u624b\u6bb5\u306f\u554f\u3044\u307e\u305b\u3093\u3002","title":"Docker \u306e\u74b0\u5883\u69cb\u7bc9"},{"location":"pre/setup/docker/#vagrant-virtualbox","text":"","title":"Vagrant + VirtualBox \u3092\u4f7f\u3063\u305f\u65b9\u6cd5"},{"location":"pre/setup/docker/#1-virtualbox","text":"VirtualBox \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30e9\u30fc\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057 \u3001\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"1. VirtualBox \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b"},{"location":"pre/setup/docker/#2-vagrant","text":"Vagrant \u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9 \u3057\u3001\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"2. Vagrant \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b"},{"location":"pre/setup/docker/#3-vm","text":"\u30ea\u30dd\u30b8\u30c8\u30ea\u3092 clone \u3057\u3066 src/pre/docker \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u79fb\u52d5\u3057\u3001 vagrant up \u3092\u5b9f\u884c\u3057\u307e\u3059\u3002 $ git clone git@github.com:mrtc0/seccamp-2022.git $ cd seccamp-2022/src/pre/docker $ vagrant up","title":"3. VM \u3092\u8d77\u52d5\u3059\u308b"},{"location":"pre/setup/docker/#4-vm","text":"vagrant ssh \u3092\u5b9f\u884c\u3057\u3066 VM \u306e\u4e2d\u306b\u30ed\u30b0\u30a4\u30f3\u3067\u304d\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 $ vagrant ssh","title":"4. VM \u306b\u30ed\u30b0\u30a4\u30f3\u3059\u308b"},{"location":"pre/setup/docker/#5-serverspec-optional","text":"\u6b63\u3057\u304f\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3055\u308c\u3066\u3044\u308b\u304b\u3069\u3046\u304b Serverspec \u3067\u30c6\u30b9\u30c8\u3067\u304d\u307e\u3059\u3002 $ gem i serverspec $ rake spec","title":"5. Serverspec \u3092\u5b9f\u884c\u3059\u308b(optional)"},{"location":"pre/setup/docker/#6-vm","text":"$ vagrant halt","title":"6. VM \u306e\u30b7\u30e3\u30c3\u30c8\u30c0\u30a6\u30f3"},{"location":"pre/setup/docker/#m1-mac-lima","text":"M1 Mac \u3092\u4f7f\u3063\u3066\u3044\u308b\u5834\u5408\u306f Lima \u3067\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3057\u307e\u3059\u3002","title":"(M1 Mac \u5411\u3051)Lima \u3092\u4f7f\u3063\u305f\u65b9\u6cd5"},{"location":"pre/setup/docker/#1-lima","text":"$ brew install lima","title":"1. Lima \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb"},{"location":"pre/setup/docker/#2-clone","text":"$ git clone git@github.com:mrtc0/seccamp-2022.git $ cd seccamp-2022","title":"2. \u30ea\u30dd\u30b8\u30c8\u30ea\u306e clone"},{"location":"pre/setup/docker/#3-vm_1","text":"\u3053\u3053\u3067\u306f docker-x86_64 \u3068\u3044\u3046\u540d\u524d\u3092\u3064\u3051\u3066\u3044\u307e\u3059\u304c\u3001\u306a\u3093\u3067\u3082\u69cb\u3044\u307e\u305b\u3093\u3002 $ limactl start --name docker-x86_64 src/pre/docker/default.yaml ? Creating an instance \"docker-x86_64\" [ Use arrows to move, type to filter ] > Proceed with the current configuration # \u3053\u308c\u3092\u9078\u3076 Open an editor to review or modify the current configuration Choose another example ( docker, podman, archlinux, fedora, ... ) Exit ...","title":"3. VM \u306e\u4f5c\u6210\u3068\u8d77\u52d5"},{"location":"pre/setup/docker/#4-vm_1","text":"$ limactl shell docker-x86_64 bash","title":"4. VM \u306b\u30ed\u30b0\u30a4\u30f3"},{"location":"pre/setup/docker/#5-vm","text":"$ limactl stop docker-x86_64","title":"5. VM \u306e\u30b7\u30e3\u30c3\u30c8\u30c0\u30a6\u30f3"},{"location":"pre/setup/kubernetes/","text":"Kubernetes \u306e\u74b0\u5883\u69cb\u7bc9 minikube \u3092\u4f7f\u3063\u3066\u30b7\u30f3\u30b0\u30eb\u30ce\u30fc\u30c9\u306e Kubernetes \u30af\u30e9\u30b9\u30bf\u3092\u69cb\u7bc9\u3057\u307e\u3059\u3002 Warning Docker \u3092\u69cb\u7bc9\u3057\u305f VM \u4e0a\u306b\u69cb\u7bc9\u3059\u308b\u308f\u3051\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u30db\u30b9\u30c8\u5074(\u3054\u81ea\u8eab\u306e\u7aef\u672b)\u3067\u5b9f\u884c\u3057\u3066\u304f\u3060\u3055\u3044\u3002 kubectl \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb https://kubernetes.io/ja/docs/tasks/tools/install-kubectl/ \u3092\u53c2\u8003\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304f\u3060\u3055\u3044\u3002 minikube \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb https://minikube.sigs.k8s.io/docs/start/ \u3092\u53c2\u8003\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304f\u3060\u3055\u3044\u3002 $ minikube start # \u3053\u306e\u3088\u3046\u306a\u8868\u793a\u304c\u51fa\u308c\u3070 OK $ kubectl get pods --all-namespaces NAMESPACE NAME READY STATUS RESTARTS AGE kube-system coredns-64897985d-ngvq4 1 /1 Running 2 ( 29d ago ) 36d kube-system etcd-minikube 1 /1 Running 2 ( 29d ago ) 36d kube-system kube-apiserver-minikube 1 /1 Running 2 ( 29d ago ) 36d kube-system kube-controller-manager-minikube 1 /1 Running 2 ( 29d ago ) 36d kube-system kube-proxy-mqb5s 1 /1 Running 2 ( 29d ago ) 36d kube-system kube-scheduler-minikube 1 /1 Running 2 ( 29d ago ) 36d kube-system storage-provisioner 1 /1 Running 5 ( 3h40m ago ) 36d Kubernetes \u30af\u30e9\u30b9\u30bf\u306e\u64cd\u4f5c\u3092\u7c21\u5358\u306b\u3059\u308b\u30c4\u30fc\u30eb\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb kubectx / kubens https://github.com/ahmetb/kubectx stern https://github.com/wercker/stern","title":"Kubernetes"},{"location":"pre/setup/kubernetes/#kubernetes","text":"minikube \u3092\u4f7f\u3063\u3066\u30b7\u30f3\u30b0\u30eb\u30ce\u30fc\u30c9\u306e Kubernetes \u30af\u30e9\u30b9\u30bf\u3092\u69cb\u7bc9\u3057\u307e\u3059\u3002 Warning Docker \u3092\u69cb\u7bc9\u3057\u305f VM \u4e0a\u306b\u69cb\u7bc9\u3059\u308b\u308f\u3051\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u30db\u30b9\u30c8\u5074(\u3054\u81ea\u8eab\u306e\u7aef\u672b)\u3067\u5b9f\u884c\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"Kubernetes \u306e\u74b0\u5883\u69cb\u7bc9"},{"location":"pre/setup/kubernetes/#kubectl","text":"https://kubernetes.io/ja/docs/tasks/tools/install-kubectl/ \u3092\u53c2\u8003\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"kubectl \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb"},{"location":"pre/setup/kubernetes/#minikube","text":"https://minikube.sigs.k8s.io/docs/start/ \u3092\u53c2\u8003\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304f\u3060\u3055\u3044\u3002 $ minikube start # \u3053\u306e\u3088\u3046\u306a\u8868\u793a\u304c\u51fa\u308c\u3070 OK $ kubectl get pods --all-namespaces NAMESPACE NAME READY STATUS RESTARTS AGE kube-system coredns-64897985d-ngvq4 1 /1 Running 2 ( 29d ago ) 36d kube-system etcd-minikube 1 /1 Running 2 ( 29d ago ) 36d kube-system kube-apiserver-minikube 1 /1 Running 2 ( 29d ago ) 36d kube-system kube-controller-manager-minikube 1 /1 Running 2 ( 29d ago ) 36d kube-system kube-proxy-mqb5s 1 /1 Running 2 ( 29d ago ) 36d kube-system kube-scheduler-minikube 1 /1 Running 2 ( 29d ago ) 36d kube-system storage-provisioner 1 /1 Running 5 ( 3h40m ago ) 36d","title":"minikube \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb"},{"location":"pre/setup/kubernetes/#kubernetes_1","text":"","title":"Kubernetes \u30af\u30e9\u30b9\u30bf\u306e\u64cd\u4f5c\u3092\u7c21\u5358\u306b\u3059\u308b\u30c4\u30fc\u30eb\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb"},{"location":"pre/setup/kubernetes/#kubectx-kubens","text":"https://github.com/ahmetb/kubectx","title":"kubectx / kubens"},{"location":"pre/setup/kubernetes/#stern","text":"https://github.com/wercker/stern","title":"stern"},{"location":"pre/setup/overview/","text":"\u69cb\u7bc9\u3059\u308b\u74b0\u5883 \u6b21\u306e2\u3064\u3092\u624b\u5143\u306e\u7aef\u672b\u306b\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u30db\u30b9\u30c8\u3068\u306a\u308b OS \u306f Windows / Mac(Intel) / Linux \u3067\u3042\u308c\u3070\u69cb\u3044\u307e\u305b\u3093\u3002 Docker Host(Linux VM) Minikube Docker Host (Linux VM) Docker \u306e\u6f14\u7fd2\u306a\u3069\u3092\u884c\u3046\u30db\u30b9\u30c8\u3067\u3059\u3002\u30b3\u30f3\u30c6\u30ca\u3092\u69cb\u6210\u3059\u308b\u8981\u7d20\u6280\u8853\u306b\u3064\u3044\u3066\u3082\u89e6\u308c\u308b\u305f\u3081\u3001Docker Dekstop \u306a\u3069\u3067\u306f\u306a\u304f\u3001Linux \u306e\u4eee\u60f3\u74b0\u5883(VM)\u3092\u7528\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u30db\u30b9\u30c8 OS \u304b\u3089 SSH \u306a\u3069\u3092\u4f7f\u3063\u3066\u64cd\u4f5c\u3059\u308b\u3053\u3068\u3092\u60f3\u5b9a\u3057\u307e\u3059\u3002 Minukube Kubernetes \u306e\u6f14\u7fd2\u74b0\u5883\u3067\u3059\u3002\u30db\u30b9\u30c8\u4e0a\u306b VM \u3092\u69cb\u7bc9\u3057\u3001\u30b7\u30f3\u30b0\u30eb\u30ce\u30fc\u30c9\u306e Kubernetes \u30af\u30e9\u30b9\u30bf\u3092\u69cb\u7bc9\u3057\u307e\u3059\u3002 \u30db\u30b9\u30c8 OS \u304b\u3089 kubectl \u3067 Kubernetes \u30af\u30e9\u30b9\u30bf\u3092\u64cd\u4f5c\u3059\u308b\u3053\u3068\u3092\u60f3\u5b9a\u3057\u307e\u3059\u3002","title":"Overview"},{"location":"pre/setup/overview/#_1","text":"\u6b21\u306e2\u3064\u3092\u624b\u5143\u306e\u7aef\u672b\u306b\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u30db\u30b9\u30c8\u3068\u306a\u308b OS \u306f Windows / Mac(Intel) / Linux \u3067\u3042\u308c\u3070\u69cb\u3044\u307e\u305b\u3093\u3002 Docker Host(Linux VM) Minikube","title":"\u69cb\u7bc9\u3059\u308b\u74b0\u5883"},{"location":"pre/setup/overview/#docker-host-linux-vm","text":"Docker \u306e\u6f14\u7fd2\u306a\u3069\u3092\u884c\u3046\u30db\u30b9\u30c8\u3067\u3059\u3002\u30b3\u30f3\u30c6\u30ca\u3092\u69cb\u6210\u3059\u308b\u8981\u7d20\u6280\u8853\u306b\u3064\u3044\u3066\u3082\u89e6\u308c\u308b\u305f\u3081\u3001Docker Dekstop \u306a\u3069\u3067\u306f\u306a\u304f\u3001Linux \u306e\u4eee\u60f3\u74b0\u5883(VM)\u3092\u7528\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u30db\u30b9\u30c8 OS \u304b\u3089 SSH \u306a\u3069\u3092\u4f7f\u3063\u3066\u64cd\u4f5c\u3059\u308b\u3053\u3068\u3092\u60f3\u5b9a\u3057\u307e\u3059\u3002","title":"Docker Host (Linux VM)"},{"location":"pre/setup/overview/#minukube","text":"Kubernetes \u306e\u6f14\u7fd2\u74b0\u5883\u3067\u3059\u3002\u30db\u30b9\u30c8\u4e0a\u306b VM \u3092\u69cb\u7bc9\u3057\u3001\u30b7\u30f3\u30b0\u30eb\u30ce\u30fc\u30c9\u306e Kubernetes \u30af\u30e9\u30b9\u30bf\u3092\u69cb\u7bc9\u3057\u307e\u3059\u3002 \u30db\u30b9\u30c8 OS \u304b\u3089 kubectl \u3067 Kubernetes \u30af\u30e9\u30b9\u30bf\u3092\u64cd\u4f5c\u3059\u308b\u3053\u3068\u3092\u60f3\u5b9a\u3057\u307e\u3059\u3002","title":"Minukube"}]}